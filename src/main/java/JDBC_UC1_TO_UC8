
                            ************* Section 1: MySQL DB  *******************

UC1: Ability to create a payroll service database
     - Using MySQL Client use create database query to create a payroll_service database
     - Also you can see the DB created by using show database query
     - And go to the database created by using use payroll_service query

                                CREATE DATABASE payroll_service;

                                SHOW DATABASES;

                                USE payroll_service;

                                SELECT DATABASE();

-------------------------------------------------------------------------------------------
UC2: Ability to create a employee payroll table in the payroll service database to manage employee payrolls
     - Use payroll_service database in MySQL Client
     - Use Create Table employee_payroll Query to create employee payroll table with columns id,  name, salary and start date as column. Note Id is set to auto increment.
     - Understand the SQL data types to be used for the table
     - Note: SQL Queries as case insensitive



                                    USE payroll_service;

                                    CREATE TABLE employee_payroll (
                                        id INT AUTO_INCREMENT PRIMARY KEY,
                                        name VARCHAR(100) NOT NULL,
                                        salary DECIMAL(15, 2) NOT NULL,
                                        start_date DATE NOT NULL
                                    );

                                    DESCRIBE employee_payroll;

-----------------------------------------------------------------------------------------------
UC3 : Ability to create employee payroll data in the payroll service database as part of CRUD Operation - Use payroll_service database in MySQL Client
- Use INSERT INTO employee_payroll Query to create employees payroll data into the employee_payroll table



                    INSERT INTO employee_payroll (name, salary, start_date)
                    VALUES
                    ('Puja Borse', 50000.00, '2025-01-01'),
                    ('Asmita Patil', 60000.50, '2024-12-15'),
                    ('Prathm Pawar', 45000.75, '2023-11-20');

________________________________________________________________________________________________________
UC4 :Ability to retrieve all the employee payroll data that is added to payroll service database
- Use payroll_service database in MySQL Client
- Use SELECT * FROM employee_payroll to retrieve all the data from the employee_payroll table


            select * from employee_payroll;

____________________________________________________________________________________________________________

UC5: Ability to retrieve salary data for a particular employee as well as all employees who have joined in a particular data range from the payroll service database
- Use SELECT salary FROM employee_payroll WHERE name = 'Bill’ Query to View Bill’s salary
- Use Select query with Where condition View employees between start dates
- Query: WHERE start BETWEEN CAST('2018-01-01' AS DATE) AND DATE(NOW());
- Note: Where Condition Clause is used to retrieve the row needed from the table
- Note: Use of Database Functions like CAST() and NOW() in the Query



            SELECT salary
            FROM employee_payroll
            WHERE name = 'Puja Borse';

            select * from employee_payroll  where start_date BETWEEN CAST('2024-11-1' as DATE ) AND DATE (NOW());

______________________________________________________________________________________________________________

UC6 : Ability to add Gender to Employee Payroll Table and Update the Rows to reflect the correct Employee Gender
- Use payroll_service database in MySQL Client
- Use Alter Table Command to add Field gender after the name field
- Use Update Query to set the gender using where condition with the employee name
- E.g. UPDATE employee_payroll set gender = 'M' where name = 'Bill' or name = 'Charlie';



                    Alter table employee_payroll add gender char(1) after name;

                    UPDATE employee_payroll
                    SET gender = 'F'
                    WHERE name = 'Puja Borse' OR name = 'Asmita Patil';

                    UPDATE employee_payroll
                    SET gender = 'M'
                    WHERE name = 'Prathm Pawar';

                    select * from employee_payroll;

____________________________________________________________________________________________

UC7: Ability to find sum, average, min, max and number of male and female employees
- Use payroll_service database in MySQL Client
- Use Database Function SUM, AVG, MIN, MAX, COUNT to do analysis by Male or Female.
- Note: You will need to use GROUP BY GENDER grouping to get the result
- E.g. SELECT SUM(salary) FROM employee_payroll WHERE gender = 'F' GROUP BY gender;



SELECT SUM(salary) FROM employee_payroll
WHERE gender = 'F' GROUP BY gender;

SELECT AVG(salary) FROM employee_payroll
WHERE gender = 'F' GROUP BY gender;

SELECT MIN(salary) FROM employee_payroll
WHERE gender = 'F' GROUP BY gender;

SELECT COUNT(salary) FROM employee_payroll
WHERE gender = 'F' GROUP BY gender;


SELECT
    gender,
    SUM(salary) AS total_salary,
    AVG(salary) AS average_salary,
    MIN(salary) AS min_salary,
    MAX(salary) AS max_salary,
    COUNT(*) AS total_employees
FROM employee_payroll
GROUP BY gender;




_____________________________________________________________________________________________

                             ************ Section 2: ER Diagram  *******************

UC8: Ability to extend employee_payroll data to store employee information like employee phone, address and department -
Ensure employee department is non nullable fields.
- Add Default Value for address field.


            ALTER TABLE employee_payroll
            ADD phone VARCHAR(15) AFTER gender;


            ALTER TABLE employee_payroll
            ADD address VARCHAR(255) DEFAULT 'Not Provided' AFTER phone;


            ALTER TABLE employee_payroll
            ADD department VARCHAR(100) NOT NULL AFTER address;


            DESCRIBE employee_payroll;


____________________________________________________________________________________________________________________
UC9: Ability to extend employee_payroll table  to have Basic Pay, Deductions, Taxable Pay, Income Tax, Net Pay


                ALTER TABLE employee_payroll
                ADD basic_pay DECIMAL(10, 2) AFTER salary;

                ALTER TABLE employee_payroll
                ADD deductions DECIMAL(10, 2) AFTER basic_pay;


                ALTER TABLE employee_payroll
                ADD taxable_pay DECIMAL(10, 2) AFTER deductions;

                ALTER TABLE employee_payroll
                ADD income_tax DECIMAL(10, 2) AFTER taxable_pay;


                ALTER TABLE employee_payroll
                ADD net_pay DECIMAL(10, 2) AFTER income_tax;


                INSERT INTO employee_payroll
                (name, gender, salary, start_date, phone, address, department, basic_pay, deductions, taxable_pay, income_tax, net_pay)
                VALUES
                ('Saloni Patil', 'F', 60000.00, '2025-01-01', '9876543210', '123 Main St, Pune', 'Engineering', 50000.00, 5000.00, 45000.00, 9000.00, 36000.00);


                select * from employee_payroll;


 ____________________________________________________________________________________________________
 UC10: Ability to make Terissa as part of Sales and Marketing Department
      - Note: The Complete employee payroll roll need to be Inserted
      - If a Salary is now going to be updated multiple rows has to be updated creating unnecessary redundancy
      - Further There is 2 Employee ID so according to Database there is two different Terissa




        INSERT INTO employee_payroll
        (name, gender, salary, start_date, phone, address, department, basic_pay, deductions, taxable_pay, income_tax, net_pay)
        VALUES
        ('Terissa', 'F', 70000.00, '2025-01-01', '9876512345', '456 Elm St, Mumbai', 'Sales and Marketing', 60000.00, 7000.00, 53000.00, 10600.00, 42400.00),
        ('Terissa', 'F', 75000.00, '2025-01-02', '9123467890', '789 Pine St, Delhi', 'Sales and Marketing', 65000.00, 7500.00, 57500.00, 11500.00, 46000.00);

        UPDATE employee_payroll
        SET salary = 80000.00, basic_pay = 68000.00, deductions = 8000.00, taxable_pay = 60000.00, income_tax = 12000.00, net_pay = 48000.00
        WHERE id = 1; -- Replace '1' with the actual ID of the target record




        CREATE TABLE employees (
            id INT AUTO_INCREMENT PRIMARY KEY,
            name VARCHAR(100) NOT NULL,
            gender CHAR(1) NOT NULL,
            phone VARCHAR(15) UNIQUE NOT NULL,
            address VARCHAR(255) DEFAULT 'Not Provided'
        );


        SHOW TABLES;

        INSERT INTO employees (name, gender, phone, address)
        VALUES
        ('Terissa', 'F', '9876512345', '456 Elm St, Mumbai'),
        ('Terissa', 'F', '9123467890', '789 Pine St, Delhi');




        INSERT INTO employees (name, gender, phone, address)
        VALUES
        ('Terissa', 'F', '9876512345', '456 Elm St, Mumbai'),
        ('Terissa', 'F', '9123467890', '789 Pine St, Delhi');


        SELECT * FROM employees;

        INSERT INTO payroll (employee_id, salary, basic_pay, deductions, taxable_pay, income_tax, net_pay, department_id)
        VALUES
        (1, 70000.00, 60000.00, 7000.00, 53000.00, 10600.00, 42400.00, 1),
        (2, 75000.00, 65000.00, 7500.00, 57500.00, 11500.00, 1);



        CREATE TABLE departments (
            department_id INT AUTO_INCREMENT PRIMARY KEY,
            department_name VARCHAR(100) NOT NULL
        );

        INSERT INTO departments (department_name)
        VALUES ('Sales and Marketing');


        SELECT * FROM departments;

        CREATE TABLE payroll (
            payroll_id INT AUTO_INCREMENT PRIMARY KEY,
            employee_id INT NOT NULL,
            salary DECIMAL(10, 2) NOT NULL,
            basic_pay DECIMAL(10, 2),
            deductions DECIMAL(10, 2),
            taxable_pay DECIMAL(10, 2),
            income_tax DECIMAL(10, 2),
            net_pay DECIMAL(10, 2),
            department_id INT,
            FOREIGN KEY (employee_id) REFERENCES employees(id),
            FOREIGN KEY (department_id) REFERENCES departments(department_id)
        );

        DESCRIBE payroll;



        INSERT INTO payroll (employee_id, salary, basic_pay, deductions, taxable_pay, income_tax)
        VALUES
        (1, 70000.00, 60000.00, 7000.00, 53000.00, 10600.00),
        (2, 75000.00, 65000.00, 7500.00, 57500.00, 11500.00);

        INSERT INTO departments (department_id, department_name)
        VALUES
        (3, 'Sales and Marketing');


        SELECT e.name, e.gender, p.salary, d.department_name
        FROM employees e
        JOIN payroll p ON e.id = p.employee_id
        JOIN departments d ON p.department_id = d.department_id;
